name: Citus package tests
on:
  push:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      prj_ver:
        description: "The version to be tested"
        required: true
  repository_dispatch:
    types: [package_test]

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      pg_versions: ${{ steps.generate-postgres.outputs.pg_versions }}
      citus_version: ${{ steps.get-citus-version.outputs.citus_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Package version
        id: get-citus-version
        run: |
          echo ${{ github.event.client_payload.ref }}
          echo "Version: ${{ github.event.client_payload.version }}"
          echo ::set-output name=citus_version::"${{ github.event.client_payload.version }}"
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev libssl-dev python3-testresources
      - name: Install python requirements
        run: python -m pip install -r packaging_automation/requirements.txt
      - name: generate postgres
        id: generate-postgres
        run: |
          export PROJECT_VERSION="${{ github.event.inputs.name }}"
          [ -z ${PROJECT_VERSION} ] && export PROJECT_VERSION=10.2.1
          POSTGRES_VERSIONS=$(python -m packaging_automation.get_postgres_versions --prj_ver ${PROJECT_VERSION})
          echo "Postgres Version: ${POSTGRES_VERSIONS}"
          echo "::set-output name=pg_versions::${POSTGRES_VERSIONS}"
  test_execution:
    runs-on: ubuntu-latest
    needs: metadata
    strategy:
      fail-fast: false
      matrix:
        platform:
          - centos/8
          - centos/7
          - ol/7
          - debian/stretch
          - debian/buster
          - debian/bullseye
          - ubuntu/bionic
          - ubuntu/focal
        pg: ${{ fromJson(needs.metadata.outputs.pg_versions) }}
    env:
      PLATFORM: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev libssl-dev python3-testresources

      - name: Install python requirements
        run: python -m pip install -r packaging_automation/requirements.txt

      - name: Citus package tests
        run: |
          export PROJECT_VERSION_FROM_PACKAGING="${{ needs.metadata.outputs.citus_version }}"
          if [[ ! -z ${PROJECT_VERSION_FROM_PACKAGING} ]]
          then
            export PROJECT_VERSION=${PROJECT_VERSION_FROM_PACKAGING}
          else
            export PROJECT_VERSION="${{ github.event.inputs.prj_ver }}"
          fi
          echo "Citus Version: ${PROJECT_VERSION} "
          [ -z ${PROJECT_VERSION} ] && export PROJECT_VERSION=10.2.1
          python -m  packaging_automation.test_citus_package \
          --prj_ver "${PROJECT_VERSION}" \
          --os_release ${{ matrix.platform }} \
          --pg_major_version ${{ matrix.pg }}
