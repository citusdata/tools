#!/usr/bin/env bash

# make bash behave
set -euo pipefail
IFS=$'\n\t'

# constants
stdout=1
stderr=2
success=0
badusage=64

jq=$(which jq)

# outputs usage message on specified device before exiting with provided status
usage() {
  cat <<'E_O_USAGE' >&"$1"
usage: rubygem_installs repo [since]

    repo : a RubyGems.org gem name
    since : a date (optional) in YYYY-MM-DD format

rubygem_installs outputs a CSV-formatted download total for a given gem from
RubyGems.org. As RubyGems only provides the total number of downloads for each
gem version since the beginning of time, that is what is emitted. Passing the
most recent time point's date as the 'since' parameter will cause this program
to exit without emitting data if that parameter is on or after today's date.
E_O_USAGE

  exit "${2}"
}

if [ "$#" -eq 1 ]; then
  if [ "${1}" = '-h' ]; then
    usage $stdout $success
  fi
  since="2016-01-01"
elif [ "$#" -eq 2 ]; then
  since="${2}"
else
  usage $stderr $badusage
fi

today=$(date "+%Y-%m-%d")

echo '"os","release","name","pg_version","version","date","total_downloads"'

if [[ "${since}" > "${today}" || "${since}" == "${today}" ]]; then
  exit
fi

gem=${1}
versionsurl="https://rubygems.org/api/v1/versions/${gem}.json"

curl -sf "${versionsurl}" |
  ${jq} -r "include \"pkg\"; makegemrows(\"${gem}\") | .[] | @csv"
