#!/bin/bash

# make bash behave
set -euo pipefail
IFS=$'\n\t'

# constants
stderr=2
badusage=64

latestpg="10"
if [ "${TARGET_PLATFORM:-}" = "" ]; then
    echo TARGET_PLATFORM must be set
    exit $badusage
fi

PLATFORM_TYPE="${TARGET_PLATFORM%%/*}"
pkgauth="${PACKAGECLOUD_API_TOKEN}:"
hubauth="Authorization: token ${GITHUB_TOKEN}"

# populate variables from packaging metadata file
# shellcheck source=/dev/null
source pkgvars

# set default values for certain packaging variables
nightlyref="${nightlyref:-master}"
releasepg="${releasepg:-9.6,10}"
nightlypg="${nightlypg:-${releasepg}}"
latestpg=$(echo "${nightlypg}" | tr ',' '\n' | sort -t. -k1,1n -k2,2n | tail -n1)

case "${PLATFORM_TYPE}" in
    debian|ubuntu)
        pkgflavor='deb'
        pkgname="${deb_pkgname:-${pkgname}}"
        pkgfull="postgresql-${latestpg}-${pkgname}"
        pkgarch="amd64"
        ;;
    el|ol)
        pkgflavor='rpm'
        pkgname="${rpm_pkgname:-${pkgname}}"
        pkgfull="${pkgname}_${latestpg//./}"
        pkgarch="x86_64"
        ;;
    *)
        echo "$0: unknown package flavor -- ${pkgflavor}" >&2
        usage $stderr $badusage
        ;;
esac

hubproj="${hubproj:-${pkgname}}"

pkgapiurl="https://packagecloud.io/api/v1/repos/citusdata/${PKG_REPOTYPE}-nightlies"
pkgapiurl+="/package/${pkgflavor}/${TARGET_PLATFORM}/${pkgfull}/${pkgarch}/versions.json"

response=$(curl -w '\n%{http_code}\n' -s -u "${pkgauth}" "${pkgapiurl}?per_page=1000")

httpcode=$(echo "${response}" | tail -n1)
case "${httpcode}" in
    404)
        httpbody='[]'
        ;;
    200)
        httpbody=$(echo "${response}" | sed '$d')
        ;;
    *)
        echo "$0: bad response code from packagecloud -- ${httpcode}" >&2
        exit $noservice
        ;;
esac

epochstr='"1970-01-01T00:00:00.000Z"'
lastnightly=$(echo "${httpbody}" | jq -r "map(.created_at) | sort | last // ${epochstr}")

hubapiurl="https://api.github.com/repos/citusdata/${hubproj}/commits?"
hubapiurl+="sha=${nightlyref}&since=${lastnightly}&per_page=1"

newcommitcount=$(curl -sf -H "${hubauth}" "${hubapiurl}" | jq -r 'length')

if [ "${newcommitcount}" -gt 0 ]; then
    citus_package -p "${TARGET_PLATFORM}" 'local' nightly 2>&1 > citus_package.log
    echo "Warnings generated by nightly docker build :"
    grep -Ei '(warning|\bi|\be|\bw):' citus_package.log || true
    mkdir -p pkgs/nightlies
    shopt -s nullglob
    mv ./*/*.rpm ./*/*.deb pkgs/nightlies
    git clean -df -e pkgs
else
    echo 'nightly up to date'
fi
